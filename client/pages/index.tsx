import type { InferGetStaticPropsType, NextPage } from "next";
import Head from "next/head";
import { GetStaticProps } from "next";
import LitJsSdk from "@lit-protocol/sdk-browser";

import decrypt from "../lit/decrypt";
import { useLit } from "../components/LitContext";
import { useCallback, useEffect, useState } from "react";
import { Event } from "@calcaster/types";
import dynamic from "next/dynamic";

const CalendarComponent = dynamic(() => import("../components/Calendar"), {
  ssr: false,
});

const Home: NextPage = () => {
  const [file, setFile] = useState<Event[] | null>();
  const { client } = useLit();

  const getMetadata = () =>
    fetch(`/api/metadata.json`).then((res) => res.json());

  const getEncryptedFile = () =>
    fetch(`/api/encrypted.json`).then((res) => res.blob());

  // TODO: Try moving to server side
  const decryptFile = useCallback(async () => {
    if (client) {
      const { accessControlConditions, encryptedSymmetricKey } =
        await getMetadata();

      const authSig = await LitJsSdk.checkAndSignAuthMessage({
        chain: "ethereum",
      });

      const encryptedFile = await getEncryptedFile();

      console.log({
        litNodeClient: client,
        accessControlConditions,
        encryptedSymmetricKey,
        chain: "ethereum",
        signature: authSig.sig,
        authSig,
        file: encryptedFile,
      });

      const decryptedFile = await decrypt({
        litNodeClient: client,
        accessControlConditions,
        encryptedSymmetricKey,
        chain: "ethereum",
        signature: authSig.sig,
        message: authSig.signedMessage,
        address: authSig.address,
        file: encryptedFile,
      });

      console.log(decryptedFile);

      setFile(decryptedFile);
    }
  }, [client]);

  return (
    <div>
      <Head>
        <title>Calcaster ðŸ§‰</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>Welcome to Calcaster ðŸ§‰</h1>
        <button onClick={decryptFile}>Decrypt</button>
        <p>File:</p>
        <CalendarComponent events={file || []} />
      </main>
    </div>
  );
};

export default Home;
